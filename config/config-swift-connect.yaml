# SWIFT SDK Configuration Guide
---
configuration:
  hosts:
    # Http Client Timeout on Connection, Read and Write
    call_timeout_sec: "10"
    #Http Swift_Signature Header name. Default should be X-SWIFT-Signature. Or Remove entry to use default
    xSwift_Signature_Header: "X-SWIFT-Signature"
    #Api Gateway setup
    api_gateway:
      # Replace it with https://api-test.swiftnet.sipn.swift.com when using pilot environment
      host: "https://sandbox.swift.com"
      # API Gateway Public certificate Trust Alias for establishing 1-way SSL with API gateway
      trust_alias: "sandbox_pub"
      # Consumer Key generated in Swift Developer portal while registering the Application
      consumer_key: "<CONSUMER_KEY>"
      # Consumer Secret generated in Swift Developer portal while registering the Application
      consumer_secret: "<CONSUMER_SECRET>"
      authorization_service:
        # Default value, do not change url parameter value
        url: "oauth2/v1/token"
        # Replace audience parameter to api-test.swiftnet.sipn.swift.com/oauth2/v1/token when using pilot environment
        audience: "sandbox.swift.com/oauth2/v1/token"
        # OAuth token session scope.
        # Client Applications can request API Gateway session scope upto the granularity of API Services and RBAC roles.
        # Scope must be defined as a list of "Service Name/RBAC role" pairs with "/" separating the values.
        # If you want to specify multiple service RBAC roles then the Service Name repeats with each RBAC Role (see example 1 below).
        # Specifying RBAC role is optional i.e., a service may be provided without an RBAC role (see example 2).
        # Scope must include at least one service, in other words defining scope is mandatory.
        # To include multiple API Services in a session add multiple pairs of "ServiceName/RBACRole" as illustrated in example 4.
        # Example 1, swift.apitracker/FullViewer swift.apitracker/Update
        # Example 2, swift.apitracker
        # Example 3, swift.apitracker swift.preval
        # Example 4, swift.apitracker/FullViewer swift.preval/access_to_service
        scope: "swift.apitracker/FullViewer"
      authorization_service_v2:
        # Default value, do not change url parameter value
        url: "oauth2/v2/token"
        # Replace audience parameter to api-test.swiftnet.sipn.swift.com/oauth2/v2/token when using pilot environment
        audience: "sandbox.swift.com/oauth2/v2/token"
        # OAuth token session scope.
        # Client Applications can request API Gateway OAuth scope and this is mandatory.
        # Example 1, urn:notification:provider:internal
        # Example 2, urn:swiftref:internal
        scope: "urn:notification:provider:internal"
    gpi_connector:
      # Your gpi Connector hostname and port. For example, "https://bewx2768:9000".
      host: "https://<domain_name>:<port>"
      # Alias name of gpi Connector public certificate used by SDK for establishing a 1-way SSL connection with gpi Connector.
      trust_alias: "<TRUST_CERT_GPI_CONNECTOR_ALIAS>"
    microgateway:
      # Microgateway host name and port
      host: ""
      # Default value , donot change this
      mgw_service: "/swift/mgw"
      # Alias name of Microgateway public certificate used by SDK for establishing a 1-way SSL connection with Microgateway.
      trust_alias: "<TRUST_CERT_MGW_ALIAS>"
      # client certificate alias for 2-way TLS to authenticate on SWIFT MGW
      client_alias: "<CLIENT_CERT_ALIAS>"
      # Microgateway Authorization ApiKey for call to End point on Management, Configuration and Monitor
      api:
        # management apikey
        management_apikey: "<VALUE>"
        # configuration apikey
        configuration_apikey: "<VALUE>"
        # monitoring apikey
        monitoring_apikey: "<VALUE>"
  #      # AMQP connection properties
  #      amqp:
  #        # AMQP Connection URL to e.g. SWIFT Microgateway instance
  #        connection_url: "amqps://<host>:<port>?<connection_options>"
  #        # JMS Queue name to send Outbound API Call via AMQP
  #        outbound_jms_queue: ""
  #        # JMS Queue name to receive Inbound API Call via AMQP
  #        inbound_jms_queue: ""
  #        # ISO20022 validation
  #        iso20022_validate: ""
  #        # Timeout to wait for response, milliseconds
  #        response_timeout_millisec: ""
  #      imdg:
  #        # Hazelcast Connection URL
  #        hazelcast_instance_address: "<host>:<port>"
  #        # Hazelcast Request Queue name
  #        hazelcast_request_queue: ""
  #        # Hazelcast Response Queue name
  #        hazelcast_response_queue: ""
  #        # ISO20022 validation
  #        hazelcast_iso20022_validate: ""
  #        # Timeout to wait for response, milliseconds
  #        hazelcast_response_timeout_millisec: ""
  #    forward_proxies:
  #          # Forward proxy hostname
  #        - hostname: "<hostname_1>"
  #          # Forward proxy port
  #          port: "<port_1>"
  #          # Forward proxy user used to connect
  #          username: "<user_1>"
  #          # Forward proxy password
  #          password: "<password_1>"
  #        - hostname: "<host_2>" # Only use when you are using multiple forward proxies
  #          port: "<port_2>"
  #          username: "<user_2>"
  #          password: "<password_2>"
  services:
    # absPath of gpi Tracker API service version 2. Replace it with /swift-apitracker-pilot/v2”  for Test and Training environment.
    tracker_service_v2: "/swift-apitracker/v2"
    # absPath of gpi Tracker API service version 3. Replace it with “/swift-apitracker-pilot/v3” for Test and Training environment.
    tracker_service_v3: "/swift-apitracker/v3"
    # absPath of g4c service version 3. Replace it with “/swift-apitracker-g4c-pilot/v3” for Test and Training environment.
    g4c_service: "/swift-apitracker-g4c/v3"
    # absPath of swift preval service version 1. Replace it with “/swift-preval-pilot/v1” for Test and Training environment.
    preval_service: "/swift-preval/v1"
    # absPath of swift preval service version 2. Replace it with “/swift-preval-pilot/v2” for Test and Training environment.
    preval_service_v2: "/swift-preval/v2"
    # absPath of swiftref service version 1. Replace it with “/swiftref-api-phase1-pilot/v1” for Test and Training environment.
    swiftref_service: "/swiftref-api-phase1/v1"
    # absPath of swiftref automatic download service version 1. Replace it with “/swiftref-api-phase1-pilot/v1” for Test and Training environment.
    sads_service: "/sads-api-phase1/v1"
    # absPath of KYC service version 1. Replace it with “/kyc-api-service-pilot/v1” for Test and Training environment.
    kyc_service: "/kyc-api-service/v1"
    # absPath of GCASE service version 1. Replace it with “/gcase-api-service-pilot/v3” for Test and Training environment.
    gcase_service: "/swift-apitracker-gcase/v3"
    # absPath of gpi Tracker API service version 4. Replace it with “/swift-apitracker-pilot/v4” for Test and Training environment.
    tracker_service_v4: "/swift-apitracker/v4"
    # absPath of Compliance Analytics Service version 4. Replace it with “/swift-compliance-service-pilot/v1” for Test and Training environment.
    compliance_analytics_service: "/swift-compliance-service/v1"
    # absPath of Banking Analytics Service version 4. Replace it with “/swift-banking-service-pilot/v1” for Test and Training environment.
    banking_analytics_service: "/swift-banking-service/v1"
    # absPath of Notification Subscriber Service version 1. Replace it with “/swift-notif-subscriber-pilot/v1” for Test and Training environment.
    notif_subscriber_service_v1: "/swift-notif-subscriber/v1"
    # absPath of Notification Provider Service version 1. Replace it with “/swift-notif-provider-pilot/v1” for Test and Training environment.
    notif_provider_service_v1: "/swift-notif-provider/v1"
    # absPath of SWIFTRef Data Service. Replace it with “swiftrefdata-pilot” for Test and Training environment.
    swiftref_service_sipn: "/swiftrefdata"
    # absPath of Swift tracker low value service version 4. Replace it with “/swift-tracker-low-value-pilot/v4” for Test and Training environment.
    slvp_service_v4: "/swift-tracker-low-value/v4"
    # absPath of Tss service v1. Replace it with “/swift-tss-api-pilot/v1” for Test and Training environment.
    tss_service: "/swift-tss-api-pilot/v1"
    # absPath of G4C service version 5. Replace it with “/swift-apitracker-g4c-pilot/v5” for Test and Training environment.
    g4c_service_v5: "/swift-apitracker-g4c/v5"
    # absPath of SLVP service version 5. Replace it with “/swift-apitracker-low-value-pilot/v5” for Test and Training environment.
    slvp_service_v5: "/swift-apitracker-low-value/v5"
    # absPath of gpi Tracker service version 5. Replace it with “/swift-apitracker-pilot/v5” for Test and Training environment.
    tracker_service_v5: "/swift-apitracker/v5"
    # absPath of gpi Tracker service version 5 for cct. Replace it with “/swift-apitracker-gcct-pilot/v5” for Test and Training environment.
    tracker_service_v5_status_confirm_cct: "/swift-apitracker-gcct/v5"
    # absPath of gpi Tracker service version 5 for cov. Replace it with “/swift-apitracker-gcov-pilot/v5” for Test and Training environment.
    tracker_service_v5_status_confirm_cov: "/swift-apitracker-gcov/v5"
    # absPath of gpi Tracker service version 5 for fit. Replace it with “/swift-apitracker-gfit-pilot/v5” for Test and Training environment.
    tracker_service_v5_status_confirm_fit: "/swift-apitracker-gfit/v5"
    # absPath of gpi Tracker service version 5 for inst. Replace it with “/swift-apitracker-gcct-inst-pilot/v5” for Test and Training environment.
    tracker_service_v5_status_confirm_inst: "/swift-apitracker-gcct-inst/v5"
    # absPath of gpi Tracker service version 5 for universal. Replace it with “/swift-apitracker-uc-cct-pilot/v5” for Test and Training environment.
    tracker_service_v5_status_confirm_universal: "/swift-apitracker-uc-cct/v5"
    # absPath of GCASE service version 5. Replace it with “/swift-apitracker-gcase-pilot/v5” for Test and Training environment.
    gcase_service_v5: "/swift-apitracker-gcase/v5"
  security_footprints:
    common:
      # Location of the java key store file. Common java key store file for software certificate and SAG SSL certificate.
      cert_path: "config/demo.jks"
      # Alias name corresponding to the PKI certificate on the disk.
      cert_password: "Abcd1234"
    software_certificate:
      # Alias name corresponding to the PKI certificate in the java key store. Refer to common object.
      cert_alias: "selfsigned"
    sags:
      # SAG server hostname
      - hostname: "<hostname_1>"
        # SAG port
        port: "<port_1>"
        # SAG SSL DN corresponding to Web Platform configuration.
        ssl_dn: "<ssl_dn_1>"
        # Name of the Messaging Partner in the relaxed mode.
        mp: "<message_partner_1>"
        # Subject DN of the PKI certificate on the HSM.
        user_dn: "<certificate_user_dn_1>"
        # LAU Key to be used with SAG.
        lau_key: "<lau_key_1>"
        # Alias name of SAG public certificate which is used by SDK for establishing a 1-way SSL connection with SAG.
        ssl_alias: "<jks_ssl_alias_1>"
      - hostname: "<hostname_2>" # Only use when you are using multiple SAG instances
        port: "<port_2>"
        ssl_dn: "<ssl_dn_2>"
        mp: "<message_partner_2>"
        user_dn: "<certificate_user_dn_2>"
        lau_key: "<lau_key_2>"
        ssl_alias: "<jks_ssl_alias_2>"
    laus:
      # Application id as specified in the swap-proxy.xml.
      - lau_application_id: "<bo_id>"
        # LAU Signature header version number. 1.0 for the current release. Do not change it.
        lau_version: '1.0'
        # LAU Key is a concatenation of LauKeyLeftPart and LauKeyRightPart from swap-proxy.xml file.
        lau_key: "<lau_key_32>"
        # UUID value (any) generated for the application integration.
        lau_appl_api_key: "<uuid>"
        # Used in the context of gpi Tracker API. Used to indicate the RBAC role applicable for the API calls.
        lau_rbac_role: "<[FULLVIEWER|STANDARTVIEWER|UPDATE]/SCOPE/[BIC8]>"
    basic:
      # Basic Auth Username
      username: "username"
      # Basic Auth Password
      password: "password"
    mgwjws:
      #Back office application name
      - application_name: "applname"
        #Application profileId configured in Microgateway
        profile_id: "profileid"
        #Shared secret used for connectivity between Back Office Application and Microgateway
        shared_secret: "Abcd1234Abcd1234Abcd1234Abcd1234"
        #Back office application name
      - application_name: "applname"
        #Application profileId configured in Microgateway
        profile_id: "profileid"
        #Shared secret used for connectivity between Back Office Application and Microgateway
        shared_secret: "Abcd1234Abcd1234Abcd1234Abcd1234"

